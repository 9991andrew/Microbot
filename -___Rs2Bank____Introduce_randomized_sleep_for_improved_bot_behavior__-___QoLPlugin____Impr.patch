Subject: [PATCH] - **Rs2Bank**: Introduce randomized sleep for improved bot behavior.
- **QoLPlugin**: Improve pouch emptying logic for RC scripts.
- **AntibanMasterPanel**: Update animation to party hat antiban duck GIF.
- **Rs2GroundItem**: Fix loot handling when inventory is nearly full.
- **Rs2Item**: Fix HA profitability calculation for stacked items.
- **Rs2Player**: Fix anti-poison potion usage logic.
- **HighAlchScript**: Add XP drop wait for alchemy automation.
- **GotrScript**: Improve portal talisman handling logic.
- **NeverLogoutScript**: Increase random delay range for idle actions.
- **AutoFishingScript**: Update banking logic and walking integration.
- **Rs2Bank**: Add method to handle emptying fish barrel.
- **MahoganyHomesScript**: Improve inventory management and update version.
- **Microbot**: Ensure plugins start when enabled.
- **TemporossScript**: Add GPU plugin check for pathfinding logic.
---
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/tempoross/TemporossScript.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/tempoross/TemporossScript.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/tempoross/TemporossScript.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/tempoross/TemporossScript.java	(revision 932702b3abe5bde5cad627283238ea920dc3fe03)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/tempoross/TemporossScript.java	(revision a48137deb8f412edec4550798099d36f3e30d993)
@@ -5,6 +5,7 @@
 import net.runelite.api.coords.WorldPoint;
 import net.runelite.api.widgets.InterfaceID;
 import net.runelite.api.widgets.Widget;
+import net.runelite.client.plugins.gpu.GpuPlugin;
 import net.runelite.client.plugins.microbot.Microbot;
 import net.runelite.client.plugins.microbot.Script;
 import net.runelite.client.plugins.microbot.breakhandler.BreakHandlerScript;
@@ -34,7 +35,7 @@
 public class TemporossScript extends Script {
 
     // Version string
-    public static final String VERSION = "1.1.0";
+    public static final String VERSION = "1.1.1";
     public static final Pattern DIGIT_PATTERN = Pattern.compile("(\\d+)");
     public static final int TEMPOROSS_REGION = 12078;
 
@@ -494,7 +495,7 @@
                         return;
                     LocalPoint localPoint = LocalPoint.fromWorld(Microbot.getClient().getTopLevelWorldView(),workArea.totemPoint);
                     Rs2Camera.turnTo(localPoint);
-                    if (Rs2Camera.isTileOnScreen(localPoint)) {
+                    if (Rs2Camera.isTileOnScreen(localPoint) && Microbot.isPluginEnabled(GpuPlugin.class)) {
                         Rs2Walker.walkFastLocal(localPoint);
                         log("Can't find the fish spot, walking to the totem pole");
                         Rs2Player.waitForWalking(2000);
@@ -614,7 +615,7 @@
         LocalPoint localPoint = LocalPoint.fromWorld(Microbot.getClient().getTopLevelWorldView(),workArea.safePoint);
         WorldPoint worldPoint = WorldPoint.fromLocalInstance(Microbot.getClient(),localPoint);
         Rs2Camera.turnTo(localPoint);
-        if (Rs2Camera.isTileOnScreen(localPoint)) {
+        if (Rs2Camera.isTileOnScreen(localPoint) && Microbot.isPluginEnabled(GpuPlugin.class)) {
             Rs2Walker.walkFastLocal(localPoint);
             Rs2Player.waitForWalking(2000);
         } else {
@@ -628,7 +629,7 @@
         assert localPoint != null;
         if(Objects.equals(Microbot.getClient().getLocalDestinationLocation(), localPoint) || Objects.equals(Microbot.getClient().getLocalPlayer().getWorldLocation(), workArea.spiritPoolPoint))
             return;
-        if(Rs2Camera.isTileOnScreen(localPoint)) {
+        if(Rs2Camera.isTileOnScreen(localPoint) && Microbot.isPluginEnabled(GpuPlugin.class)) {
             Rs2Walker.walkFastLocal(localPoint);
             Rs2Player.waitForWalking(2000);
         }
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/Microbot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/Microbot.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/Microbot.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/Microbot.java	(revision a48137deb8f412edec4550798099d36f3e30d993)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/Microbot.java	(revision b20bde295a3e3f098c1860089459c9b7aede4890)
@@ -286,6 +286,7 @@
         {
             try {
                 getPluginManager().setPluginEnabled(plugin, true);
+                getPluginManager().startPlugin(plugin);
                 getPluginManager().startPlugins();
             } catch (Exception e) {
                 e.printStackTrace();
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesConfig.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesConfig.java	(revision b20bde295a3e3f098c1860089459c9b7aede4890)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesConfig.java	(revision 0bc21de11f0d50ba8d82ecc99fff3ee300cf643f)
@@ -6,7 +6,7 @@
 
 @ConfigGroup(MahoganyHomesConfig.GROUP_NAME)
 @ConfigInformation("<h2>S-1D Home Raider</h2>\n" +
-        "<h3>BETA PREVIEW 5</h3>\n" +
+        "<h3>BETA PREVIEW 6</h3>\n" +
         "<p>1. <strong>Start anywhere:</strong> Just make sure to have teleports, saw and a hammer.</p>\n" +
         "<p>2. <strong>Contracts:</strong> Select your desired contract <em>BEFORE</em> starting.</p>\n" +
         "<p>3. <strong>Supplies:</strong> Stock up on the correct planks and Steel bars in the bank, the bot will handle resupplying on its own</p>\n" +
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesScript.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesScript.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesScript.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesScript.java	(revision b20bde295a3e3f098c1860089459c9b7aede4890)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/mahoganyhomez/MahoganyHomesScript.java	(revision 0bc21de11f0d50ba8d82ecc99fff3ee300cf643f)
@@ -29,7 +29,7 @@
 @Slf4j
 public class MahoganyHomesScript extends Script {
 
-    public static String version = "0.0.5";
+    public static String version = "0.0.6";
     @Inject
     MahoganyHomesPlugin plugin;
 
@@ -353,10 +353,12 @@
                 if(plugin.getConfig().usePlankSack()){
                     if(Rs2Inventory.isFull() && !Rs2Inventory.contains(ItemID.STEEL_BAR)) {
                         Rs2Bank.depositAll(plugin.getConfig().currentTier().getPlankSelection().getPlankId());
-                        sleep(600, 1200);
+                        Rs2Inventory.waitForInventoryChanges(5000);
                     }
-                    Rs2Bank.withdrawX(ItemID.STEEL_BAR, 4-steelBarsInInventory());
-                    sleep(600, 1200);
+                    if(steelBarsInInventory() < 4) {
+                        Rs2Bank.withdrawX(ItemID.STEEL_BAR, 4 - steelBarsInInventory());
+                        Rs2Inventory.waitForInventoryChanges(5000);
+                    }
 
                     Global.sleepUntil(() -> planksInPlankSack() == 28,() -> {
                         Rs2Bank.withdrawAll(plugin.getConfig().currentTier().getPlankSelection().getPlankId());
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/bank/Rs2Bank.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/bank/Rs2Bank.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/bank/Rs2Bank.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/bank/Rs2Bank.java	(revision 0bc21de11f0d50ba8d82ecc99fff3ee300cf643f)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/bank/Rs2Bank.java	(revision e7992a77ac5480364796c7126c3ad269feac26a9)
@@ -497,7 +497,7 @@
         } else {
             invokeMenu(HANDLE_X_UNSET, rs2Item);
 
-            sleep(1200);
+            sleep(Rs2Random.randomGaussian(1100,200));
             Rs2Keyboard.typeString(String.valueOf(amount));
             Rs2Keyboard.enter();
             sleepUntil(() -> Rs2Inventory.hasItem(rs2Item.id), 2500);
@@ -577,7 +577,7 @@
         for (Rs2Item item : items) {
             if (item == null) continue;
             depositAll(item);
-            sleep(300, 600);
+            sleep(Rs2Random.randomGaussian(400,200));
             result = true;
         }
         return result;
@@ -1152,7 +1152,7 @@
             }
 
             sleepUntil(Rs2Bank::isOpen);
-            sleep(600, 1000);
+            sleep(Rs2Random.randomGaussian(800,200));
             return true;
         } catch (Exception ex) {
             System.out.println(ex.getMessage());
@@ -1182,7 +1182,7 @@
             }
 
             sleepUntil(Rs2Bank::isOpen);
-            sleep(600, 1000);
+            sleep(Rs2Random.randomGaussian(800,200));
             return true;
         } catch (Exception ex) {
             System.out.println(ex.getMessage());
@@ -1569,7 +1569,7 @@
     public static boolean setWithdrawAsNote() {
         if (hasWithdrawAsNote()) return true;
         Rs2Widget.clickWidget(786458);
-        sleep(600);
+        sleep(Rs2Random.randomGaussian(550,100));
         return hasWithdrawAsNote();
     }
 
@@ -1581,7 +1581,7 @@
     public static boolean setWithdrawAsItem() {
         if (hasWithdrawAsItem()) return true;
         Rs2Widget.clickWidget(786456);
-        sleep(600);
+        sleep(Rs2Random.randomGaussian(550,100));
         return hasWithdrawAsItem();
     }
 
@@ -1639,6 +1639,18 @@
         return Rs2Inventory.interact(gemBag, "Empty");
     }
 
+    /**
+     * Empty fish barrel
+     *
+     * @return true if fish barrel was emptied
+     */
+
+    public static boolean emptyFishBarrel() {
+        Rs2Item fishBarrel = Rs2Inventory.get(ItemID.FISH_BARREL,ItemID.OPEN_FISH_BARREL);
+        if (fishBarrel == null) return false;
+        return Rs2Inventory.interact(fishBarrel, "Empty");
+    }
+
 
     /**
      * Withdraw items from the lootTrackerPlugin
@@ -1709,6 +1721,45 @@
         return Integer.parseInt(bank.getText());
     }
 
+    /**
+     * Retrieves an Rs2Item from the bank based on the specified item ID.
+     *
+     * @param itemId the ID of the item to search for.
+     * @return the Rs2Item matching the item ID, or null if not found.
+     */
+    public static Rs2Item getBankItem(int itemId) {
+        return bankItems().stream()
+                .filter(item -> item.getId() == itemId)
+                .findFirst()
+                .orElse(null);
+    }
+
+    /**
+     * Retrieves an Rs2Item from the bank based on the specified item name.
+     *
+     * @param itemName the name of the item to search for.
+     * @param exact whether to search for an exact match (true) or a partial match (false).
+     * @return the Rs2Item matching the item name, or null if not found.
+     */
+    public static Rs2Item getBankItem(String itemName, boolean exact) {
+        return bankItems.stream()
+                .filter(item -> exact
+                        ? item.getName().equalsIgnoreCase(itemName)
+                        : item.getName().toLowerCase().contains(itemName.toLowerCase()))
+                .findFirst()
+                .orElse(null);
+    }
+
+    /**
+     * Retrieves an Rs2Item from the bank based on a partial match of the specified item name.
+     *
+     * @param itemName the name of the item to search for.
+     * @return the Rs2Item matching the item name (partial match), or null if not found.
+     */
+    public static Rs2Item getBankItem(String itemName) {
+        return getBankItem(itemName, false);
+    }
+
     /**
      * Retrieves the list of bank tab widgets.
      * <p>
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/nateplugins/skilling/natefishing/AutoFishingScript.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/nateplugins/skilling/natefishing/AutoFishingScript.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/nateplugins/skilling/natefishing/AutoFishingScript.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/nateplugins/skilling/natefishing/AutoFishingScript.java	(revision dbf5b84dad6edd19a3b1b484830696898917fa10)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/nateplugins/skilling/natefishing/AutoFishingScript.java	(revision c12386a304c23f8519894e22613993ba44143931)
@@ -13,6 +13,7 @@
 import net.runelite.client.plugins.microbot.util.inventory.Rs2Inventory;
 import net.runelite.client.plugins.microbot.util.npc.Rs2Npc;
 import net.runelite.client.plugins.microbot.util.player.Rs2Player;
+import net.runelite.client.plugins.microbot.util.walker.Rs2Walker;
 
 import java.util.Arrays;
 import java.util.List;
@@ -28,7 +29,7 @@
 
 public class AutoFishingScript extends Script {
 
-    public static String version = "1.4.1";
+    public static String version = "1.5.0";
     State state;
 
     public boolean run(AutoFishConfig config) {
@@ -74,8 +75,15 @@
                         break;
                     case RESETTING:
                         if (config.useBank()) {
-                            if (!Rs2Bank.bankItemsAndWalkBackToOriginalPosition(itemNames, initialPlayerLocation))
-                                return;
+                            if (Rs2Bank.walkToBankAndUseBank()){
+                                for (String itemName : itemNames) {
+                                    Rs2Bank.depositAll(itemName,false);
+                                    //Rs2Bank.depositAll(x -> x.name.toLowerCase().contains(itemName));
+                                }
+                                Rs2Bank.emptyFishBarrel();
+
+                                Rs2Walker.walkTo(initialPlayerLocation);
+                            }
                         } else {
                             Rs2Inventory.dropAllExcept(false, config.getDropOrder(), "rod", "net", "pot", "harpoon", "feather", "bait", "vessel", "candle", "lantern");
                         }
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/scripts/NeverLogoutScript.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/scripts/NeverLogoutScript.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/scripts/NeverLogoutScript.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/scripts/NeverLogoutScript.java	(revision c12386a304c23f8519894e22613993ba44143931)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/scripts/NeverLogoutScript.java	(revision 07ca70c822e18cee60844d10873aec9eb439ecb0)
@@ -8,11 +8,11 @@
 import java.awt.event.KeyEvent;
 
 public class NeverLogoutScript {
-    private static long randomDelay = Rs2Random.between(1000,3000);
+    private static long randomDelay = Rs2Random.between(3000,5000);
 
     public static void onGameTick(GameTick event) {
         if (Rs2Player.checkIdleLogout(randomDelay)) {
-            randomDelay = Rs2Random.between(1000,3000);
+            randomDelay = Rs2Random.between(3000,5000);
             Rs2Keyboard.keyPress(KeyEvent.VK_BACK_SPACE);
         }
     }
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/runecrafting/gotr/GotrScript.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/runecrafting/gotr/GotrScript.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/runecrafting/gotr/GotrScript.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/runecrafting/gotr/GotrScript.java	(revision 07ca70c822e18cee60844d10873aec9eb439ecb0)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/runecrafting/gotr/GotrScript.java	(revision 90d312fc3eb5fe63eaad61aa6323cfd89a7a0db1)
@@ -136,7 +136,7 @@
                     timeToStart = ((int) ChronoUnit.SECONDS.between(Instant.now(), nextGameStart.get()));
                 }
 
-                if (Rs2Inventory.hasItem("portal talisman")) {
+                if (Rs2Inventory.hasItem("portal talisman") && !Rs2Inventory.hasItem(GUARDIAN_ESSENCE) && !Rs2Inventory.anyPouchFull()) {
                     Rs2Inventory.drop("portal talisman");
                     log("Dropping portal talisman...");
                 }
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/playerassist/combat/HighAlchScript.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/playerassist/combat/HighAlchScript.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/playerassist/combat/HighAlchScript.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/playerassist/combat/HighAlchScript.java	(revision 90d312fc3eb5fe63eaad61aa6323cfd89a7a0db1)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/playerassist/combat/HighAlchScript.java	(revision 74f4133940db3f7f6d90e0c324b3bed37b553cea)
@@ -1,12 +1,13 @@
 package net.runelite.client.plugins.microbot.playerassist.combat;
 
+import net.runelite.api.Skill;
 import net.runelite.client.plugins.microbot.Microbot;
 import net.runelite.client.plugins.microbot.Script;
 import net.runelite.client.plugins.microbot.playerassist.PlayerAssistConfig;
 import net.runelite.client.plugins.microbot.util.inventory.Rs2Inventory;
 import net.runelite.client.plugins.microbot.util.inventory.Rs2Item;
 import net.runelite.client.plugins.microbot.util.magic.Rs2Magic;
-import net.runelite.client.plugins.skillcalculator.skills.MagicAction;
+import net.runelite.client.plugins.microbot.util.player.Rs2Player;
 
 import java.util.concurrent.TimeUnit;
 
@@ -16,8 +17,9 @@
         try {
             if (!Microbot.isLoggedIn() || !super.run() || !config.toggleHighAlchProfitable()) return;
             Rs2Item item = Rs2Inventory.get(Rs2Item::isHaProfitable);
-            if (item != null && Rs2Magic.canCast(MagicAction.HIGH_LEVEL_ALCHEMY)) {
+            if (item != null) {
                 Rs2Magic.alch(item);
+                Rs2Player.waitForXpDrop(Skill.MAGIC, 10000, false);
             }
 
         } catch(Exception ex) {
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/player/Rs2Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/player/Rs2Player.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/player/Rs2Player.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/player/Rs2Player.java	(revision 74f4133940db3f7f6d90e0c324b3bed37b553cea)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/player/Rs2Player.java	(revision c8420b85996d3efff3bd1773f07e6d988e728fbe)
@@ -930,7 +930,7 @@
      */
 
     public static boolean drinkAntiPoisonPotion() {
-        if(hasAntiPoisonActive() || hasAntiVenomActive()) {
+        if(!hasAntiPoisonActive() || hasAntiVenomActive()) {
             return true;
         }
         return usePotion(Rs2Potion.getAntiPoisonVariants().toArray(new String[0]));
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/inventory/Rs2Item.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/inventory/Rs2Item.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/inventory/Rs2Item.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/inventory/Rs2Item.java	(revision c8420b85996d3efff3bd1773f07e6d988e728fbe)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/inventory/Rs2Item.java	(revision 45447c381c94df29956c9f365e1f94c7b31e63d5)
@@ -84,7 +84,7 @@
     public boolean isHaProfitable() {
         int natureRunePrice = Microbot.getClientThread().runOnClientThread(() ->
                 Microbot.getItemManager().getItemPrice(ItemID.NATURE_RUNE));
-        return (getHaPrice() - natureRunePrice) > getPrice() && isTradeable;
+        return (getHaPrice() - natureRunePrice) > (getPrice()/quantity) && isTradeable;
 
     }
 
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/grounditem/Rs2GroundItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/grounditem/Rs2GroundItem.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/grounditem/Rs2GroundItem.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/grounditem/Rs2GroundItem.java	(revision 45447c381c94df29956c9f365e1f94c7b31e63d5)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/grounditem/Rs2GroundItem.java	(revision 41bcd8c1b46f0154fa53b21ddf8fad2d52c4db34)
@@ -270,7 +270,10 @@
     }
 
     private static boolean coreLoot(GroundItem groundItem) {
-        final int quantity = groundItem.isStackable() ? 1 : groundItem.getQuantity();
+        int quantity = groundItem.isStackable() ? 1 : groundItem.getQuantity();
+        if (Rs2Inventory.getEmptySlots() < quantity) {
+            quantity = Rs2Inventory.getEmptySlots();
+        }
         for (int i = 0; i < quantity; i++) {
 
             /**
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/antiban/ui/MasterPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/antiban/ui/MasterPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/antiban/ui/MasterPanel.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/antiban/ui/MasterPanel.java	(revision 41bcd8c1b46f0154fa53b21ddf8fad2d52c4db34)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/util/antiban/ui/MasterPanel.java	(revision b1b0db5f37fd79ed0060cf67b6024e582f7f5089)
@@ -91,7 +91,7 @@
         layeredPane.setPreferredSize(new Dimension(250, 32));
 
         // Create and position the GIF JLabel
-        ImageIcon icon = new ImageIcon(Rs2Antiban.class.getResource("walkingduckxmas.gif"));
+        ImageIcon icon = new ImageIcon(Rs2Antiban.class.getResource("walkingduckparty.gif"));
         label = new FlippableLabel(icon);
         label.setBounds(xPosition, 0, icon.getIconWidth(), icon.getIconHeight()); // Initial position
         layeredPane.add(label, JLayeredPane.DEFAULT_LAYER); // Add label to the default layer
Index: runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/QoLPlugin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/QoLPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/QoLPlugin.java
--- a/runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/QoLPlugin.java	(revision 7c38186988bcea255947d248d591f783cdc4a235)
+++ b/runelite-client/src/main/java/net/runelite/client/plugins/microbot/qualityoflife/QoLPlugin.java	(revision 442cfcb64b788165d21231835455c0a1d8daab5f)
@@ -22,6 +22,7 @@
 import net.runelite.client.plugins.microbot.qualityoflife.scripts.pvp.PvpScript;
 import net.runelite.client.plugins.microbot.qualityoflife.scripts.wintertodt.WintertodtOverlay;
 import net.runelite.client.plugins.microbot.qualityoflife.scripts.wintertodt.WintertodtScript;
+import net.runelite.client.plugins.microbot.util.Global;
 import net.runelite.client.plugins.microbot.util.antiban.FieldUtil;
 import net.runelite.client.plugins.microbot.util.bank.Rs2Bank;
 import net.runelite.client.plugins.microbot.util.camera.Rs2Camera;
@@ -320,9 +321,13 @@
             if(Rs2Inventory.anyPouchFull()) {
                 Microbot.getClientThread().runOnSeperateThread(() -> {
                     Rs2Inventory.waitForInventoryChanges(50000);
-                    Rs2Inventory.emptyPouches();
-                    Rs2Inventory.waitForInventoryChanges(3000);
-                    Rs2GameObject.interact("Altar");
+                    Global.sleepUntil(() -> !Rs2Inventory.anyPouchFull(), ()-> {
+                                Rs2Inventory.emptyPouches();
+                                Rs2Inventory.waitForInventoryChanges(3000);
+                                Rs2GameObject.interact("Altar");
+                                Rs2Inventory.waitForInventoryChanges(3000);
+                            }
+                            ,10000, 200);
                     return null;
                 });
 
diff --git a/runelite-client/src/main/resources/net/runelite/client/plugins/microbot/util/antiban/walkingduckparty.gif b/runelite-client/src/main/resources/net/runelite/client/plugins/microbot/util/antiban/walkingduckparty.gif
new file mode 100644
index 0000000000000000000000000000000000000000..53d3a8887c122de4c857d2b059c3bfa855c6707c
GIT binary patch
literal 9741
zc%1Fnc~Dc=9>DP%NFXaDgi96{gCeAmx*$uUVA&;t3IP!*W5Tl#D3KCKscC5pO9HfF
z6}KRW2_n+k5^5|$8#D_vxPSpHh++i<!*lE_R$q(sNuJo5&e*=cUjJx2-p@aG=AQq~
zo%@~NIUCq9OjZUBpaDMtfYk~hIY9`5H$GKPie878r*e-txijq8Y!r@^<09^`_goWV
zAEHRny52bm*w`?<kqv5UvJ4;f8Y(*xhb3f^`3A>r<+a4xVd^)lOvf-=nY%<zz0uUt
zZZg`@CL;pNkHKLacqERVDKK24^nXJgI+A_?{3xxnkUGeq9&e;n)qodD$-D?G8kb6<
z8|&8e4N(VJ9W?_%)INW5kCfbA45o!*P}nV?tEP#1xu1O1Oz9h>n2#i=uQR9veiY+-
z<j;!0t!vQ;bSRPBaF}#nPttXhjlJZaOB7w7ANjH`*+?gAgy8Wv35mgI8ylh{xK{=?
zslm@WT-vpyFS|(XdOBI_L((h<m6^nYZxA*GqUm%x5)&tMlpZ4}P7zO@b@}8AZ}5y4
zs9Z{{NhehE2yy=CR;eejxQ*8T^l;9^lC9-ztN!F5*XLGquyv*rfc&+2S}~iWlanID
z6QccBtg?kIzIp;jIX`<c7S|Vl69BmYz>sdSZAyI^lIWY>o6nQVaR@9vRw)g$wTCa2
zrmiX}MPRAS-GFB)93ay3y;AiC1eOvY7&q&U_IS?}2j|tLQ7EEMLQ}%$rO_DDTEqn@
zAyPg>2}r))CbZqa0a&63;{!&MBh9xINr{+xldx>Vey_x{<!qwQ7G+eYZzlS%Z%Qlg
zQe!6O=!zY!5*RV&s>1h;%L-PRcQsX?d*hrivh!?RAeW}eNP1GuzgBxtvVG?hT>X%6
zQj6*;5aqDicB+S2?{1!Eop?=?HFqjldh?J4X?ox~ITNVZqbBr+uuKD@Mk2Src;6$r
z*>5O3PdxW8S!-u((!OtR&;L|zdNucZiMw|9zh`gx#XEAl#CNZ-O^%W!7vG)&I2QL^
zHYp=x;v0w-W%1WN!?()1O1#qq1rL6d<u!(8@0X(x@Zaxk1r(q^9-wFG0iHJq3eexq
zuWiu*c0^wWohJ>mLBOd@8eVVs5arC^nRR+wB*6<%giTBu&@L-@y~+&R3I~t%Qe*~4
zRY~yLs9=^Xm3;s*(mGmdXAyhJ{x$tdRinJxm03x>s@iG)k;i%okVuH?#V_SxTvivr
z*-p#j6am5?;2RIM!B54jI6ap^#`bf9iNPMsSP55GPFT~7uJzCASF%suQ|nePw#C?d
zb~=#jW-DcMR!;{j!}$wWM*Zu8^EsxfM_Hm9gD0kY8*WoqOtG3R<qqH7oH}}^Ze+YY
zgzu0w9_6XlyJ<TL@2N-3wUYFX!n<AX$DNPocjg4$IJs@xk2}Qg=FJ4MHZ1hZ_vJjk
zIr=Hzy8dUwtw;YXtJw3fT{wRLG;#L~zseskxHfwF_S;ywMNwey(V|Sg`2OnGWyG67
zb#A>mDR_CKxW!D;Rw)u>flz9o)IfgY?=i--<=l-~Ow9$ar%vJm*DG&DR19ltG@0h-
zsgVan4V@m<9*F#^D0g4IrMqES+PPd=ZJ=d+DBt1UIF6;(V`=X^oV+Sjt0JGy9kZDC
ztelEB`5&MDd~{RPmT$Kgi|?N{z4d+ig6N$~_e(U6OV&vY6W<wKM<mv@qWOi<kvoM~
zz>f5ywX6#FA{+mv`VzYzDqhcT&n!9|&b{t!+C_44u9sn<z(9e4{KgA`al$IwGQwfD
za3?y=tb>&x-8|xzJXo2XgGX2;4W@&mskoH3d|0F%&Xp;eorOhJ9zsO#r6n4=QO>U<
zf65y$AU2n-<aO`Yi|lY<pkPcV6!9F~*X@2h`_Q)X16qU}|FLgd<$-0fHT3O<rmBNJ
z361*^v=;+&?|+?>ewk%xad|tRpOel=ssy!tuFRIZ-C`ouGBeoxY?kSppP6BuvJ@|j
zeK~RT4v=SQD5G?IJ&?P~p1bC>xNy4l*(|f8zO!)h`7GnZ5<D32+wz_|Bs5r5p=KMK
zljgNWLH9GxUu&2xDt;o+EjcgY7E7M~9C~z2It)_`?iyJ>vqJ<Aian8gF?tS>T?jtz
z5fC}4sxZ<&vd83ZF_lSSP-39OKwj{&CuZ~iml(}c?};*e4B0Ka5Eq~d<IW!OjBpBa
z#zTdH3Iln;%YGq~`bREgwx+7GkHO?)S=!9G9zp9?#YC3o(rQ(f%L0f8*8SO^76O4l
MAP@)y0(r^(7jtp6kpKVy

